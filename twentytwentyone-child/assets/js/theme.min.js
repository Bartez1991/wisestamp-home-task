document.addEventListener('DOMContentLoaded', () => {

  /**
   * Hero Buttons Listener
   * @param {function} callback 
   */
  const heroBtnsListener = (...callback) => {
    let wrapper = document.getElementsByClassName('hero-content')[0],
      btns = wrapper.getElementsByClassName('button-color');

    Array.prototype.filter.call(btns, btn => {
      btn.addEventListener('click', function (e) {
        e.preventDefault();
        // Run Callback after Click Button
        for (let i = 0; i < callback.length; i++) {
          callback[i](this);
          console.log(callback[i])
        }        
      });
    });
  };

  /**
   * Change Title color
   * @param {NodeList} item 
   */
  const changeTitleColor = (item) => {
    let wrapper = document.getElementsByClassName('hero-content')[0],
      title = wrapper.querySelector('.title-hero');
    // Set Title Color
    title.style.color = item.dataset.color;
  };

  /**
   * Date Range btw Target Date & Current Date
   */
  const getDateRange = () => {
    let currentDate = new Date(), // Get Current Day
      endDate = moment(currentDate).endOf('month'), // Clone the Value Before .endOf()
      range = moment.duration(endDate - currentDate, 'milliseconds'), // Timestamp Duration
      element = document.querySelector('.countdown'), // Target Element
      weekTextEnd = range.weeks() > 1 ? 's' : '', // Add end to the week label
      dayTextEnd = range.days() > 1 ? 's' : ''; // Add end to the week label

    // Set Countdown Timer
    element.textContent = `${range.weeks()} week${weekTextEnd}, ${range.days()} day${dayTextEnd}, ${range.hours()}:${range.minutes()}:${range.seconds()}`;
    // 
    countdown(element, range);
  };

  /**
   * Countdownt Timer
   * @param {NodeList} element 
   * @param {Integer} range 
   */
  const countdown = (element, range) => {
    clearInterval(interval);

    var interval = setInterval(() => {
      // Update Timestamp Duration
      range = moment.duration(range - 1000, 'milliseconds');
      let weekTextEnd = range.weeks() > 1 ? 's' : '',
        dayTextEnd = range.days() > 1 ? 's' : '';
      // Set New Value for Countdown Timer
      element.textContent = `${range.weeks()} week${weekTextEnd}, ${range.days()} day${dayTextEnd}, ${range.hours()}:${range.minutes()}:${range.seconds()}`;
    }, 1000);

  };

  // Fire Methods
  heroBtnsListener(changeTitleColor, getDateRange);
});